# /etc/nginx/sites-available/your_django_project (or similar path)

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name yourdomain.com www.yourdomain.com; # Replace with your actual domain

    # Optional: If you use ACME challenges for Let's Encrypt
    # location /.well-known/acme-challenge/ {
    #     root /var/www/certbot; # Directory where certbot places challenges
    # }

    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS Server Block
server {
    listen 443 ssl http2; # http2 for performance
    server_name yourdomain.com www.yourdomain.com; # Replace with your actual domain

    # SSL Certificate paths
    ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem; # Your certificate
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem; # Your private key

    # Strong SSL/TLS Configuration (best practices)
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3; # Limit to strong protocols
    ssl_prefer_server_ciphers on;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:!RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!CAMELLIA:!SEED";
    ssl_stapling on; # OCSP Stapling
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s; # Google DNS or your preferred resolver
    resolver_timeout 5s;

    # HSTS is set in Django's settings.py (SECURE_HSTS_SECONDS),
    # but you can also set it here (or as an addition if you don't use Django's SecurityMiddleware).
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Point to your Gunicorn/uWSGI socket for Django application
    location / {
        proxy_pass http://unix:/path/to/your/project/gunicorn.sock; # Or your uWSGI/Gunicorn address
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https; # Crucial for Django to know it's HTTPS
    }

    # Serve static and media files directly from Nginx (recommended)
    location /static/ {
        alias /path/to/your/project/staticfiles/; # Corresponds to STATIC_ROOT
    }

    location /media/ {
        alias /path/to/your/project/media/; # Corresponds to MEDIA_ROOT
    }
}